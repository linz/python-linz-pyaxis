
#=====================================================================
# Parameters specific to axis adjustment

use_plugin axis_adjustment

# Regular expression defining which observations are to the telescope antenna(e).
#
# The software assumes that a number of targets are fixed to the antenna, and
# each is observed as the antenna positioned in a series of orientations (arcs)
# by rotating about either the primary or secondary axis.  The observation data
# should have a unique and identifiable name for each target position on each arc.
# These names are identified by a python regular expression defined by the 
# axis_target_re parameter.
#
# The regular expression should include named capture groups (?P<name>re)
# with names for 
#      arc
#      angle
#      target
# where arc series of positions that this observation is part of, angle
# defines the position on the arc, and target identifies the specific 
# target attached to the telescope.
#
# The series of target positions for each arc are used to identify the 
# rotation axis of the arc, and the set of horizontal and vertical arc
# rotation axes identify the primary rotation axis of the telescope, the
# relationship of it to the secondary rotation axis, and the location of the
# antenna reference point (ARP).
#
# Note: Note that the software assumes that targets used for azimuth arcs 
# (vertical rotation axis) are not the same as targets used for elevation arcs 
# (horizontal rotation axis) even if they have the same target name.

axis_target_re (?P<angle>\d\d)(?P<arc>[A-Z])(?P<target>\d)

# Mapping from arc codes to antenna.  Each line defines the all arcs that apply
# to a specific antenna.  Each antenna is given a code by which it is identified
# in the outputs from the software (eg listing file, SINEX output file)

antenna_arcs WARK12M W X Y Z
antenna_arcs WARK30M A B C D

# Target prism calibration corrections
# Note that target calibrations are only calculated in the final phase
# of the adjustment.
#  target [calculate]  value

target_calibration 1 0.0153
target_calibration 2 calculate
target_calibration 3 calculate 0.0182
target_calibration 4 calculate
target_calibration 5 calculate
target_calibration 6 calculate

# If supplying good input coordinates, then can skip phase1 initial 
# unconstrained adjustment.

skip_phase1_adjustment no

#======================================================================
# Other outputs

# target_adjustment_csv_file is a file of offsets of the target mark
# coordinates in the constrained adjustment (phase3) relative to the 
# unconstrained adjustment (phase1)
#
# Note that if the the phase3 adjustment changes the target calibration
# values then this output will not be generated.  This can be fixed by
# updating the target_calibration initial values above to the same as the
# calculated values.

target_adjustment_csv_file wark2015lt-tgtoffset.csv
